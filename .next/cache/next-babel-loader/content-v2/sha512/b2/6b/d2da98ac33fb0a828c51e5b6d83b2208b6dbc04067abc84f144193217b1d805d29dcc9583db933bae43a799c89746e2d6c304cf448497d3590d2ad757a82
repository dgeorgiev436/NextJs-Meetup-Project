{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/React/NextJs/CodeAlongProject/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n}; // Tell next.js for which dynamic parameter values the page should be pre-generated\n\n\n_s(MeetupDetails, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/workspace/React/NextJs/CodeAlongProject/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["useRouter","Fragment","MeetupDetail","MeetupDetails","props","router","image","title","address","description"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC7B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,GAAG,EAAII,KAAK,CAACE,KADjB;AAEI,IAAA,KAAK,EAAIF,KAAK,CAACG,KAFnB;AAGI,IAAA,OAAO,EAAIH,KAAK,CAACI,OAHrB;AAII,IAAA,WAAW,EAAIJ,KAAK,CAACK;AAJzB;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAXD,C,CAcA;;;GAdMN,a;UACaH,S;;;KADbG,a;;AAuDN,eAAeA,aAAf","sourcesContent":["import {useRouter} from \"next/router\"\nimport {Fragment} from \"react\"\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\nimport {MongoClient} from \"mongodb\"\n\n\nconst MeetupDetails = (props) => {\n    const router = useRouter();\n\n    return(\n        <MeetupDetail \n            img = {props.image}\n            title = {props.title}\n            address = {props.address}\n            description = {props.description}\n        />\n    )\n}\n\n\n// Tell next.js for which dynamic parameter values the page should be pre-generated\nexport const getStaticPaths = async() => {\n\t\n\tconst client = await MongoClient.connect(\"mongodb+srv://Admin:hesoyam@cluster0.eykfx.mongodb.net/MeetupsProject?retryWrites=true&w=majority\")\n\tconst db = client.db();\n\tconst meetupCollection = db.collection(\"meetups\");\n\t\n\tconst meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n\t\n\tclient.close();\n\n\t\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n\t}\n}\n\n\n// Returns props for specific meetup\nexport const getStaticProps = async(context) => {\n\tconst meetupId = context.params.meetupId\n\t\n\tconst client = await MongoClient.connect(\"mongodb+srv://Admin:hesoyam@cluster0.eykfx.mongodb.net/MeetupsProject?retryWrites=true&w=majority\")\n\tconst db = client.db();\n\tconst meetupCollection = db.collection(\"meetups\");\n\t\n\tconst selectedMeetup = await meetupCollection.findOne({_id: meetupId})\n\t\n\tclient.close();\n\n// \tRuns on server side\n\tconsole.log(selectedMeetup)\n\t\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: selectedMeetup\n\t\t}\n\t}\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}