{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/React/NextJs/CodeAlongProject/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}; // export const getServerSideProps = async(context) => {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t}\n// \t}\n// }\n// makes props wait until component functions (useEffect) are executed and data is loaded\n\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Admin:hesoyam@cluster0.eykfx.mongodb.net/MeetupsProject?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // \t\tIncremental static generation feature ( re pre-generate every 1 sec after deployement)\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/workspace/React/NextJs/CodeAlongProject/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MeetupList","MongoClient","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","title","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACF,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AAQH,CATD,C,CAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAW;AAEvC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,mGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEE,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AACxCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KAD0B;AAExCC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAF0B;AAGxCC,QAAAA,EAAE,EAAEH,MAAM,CAACI,GAAP,CAAWC,QAAX;AAHoC,OAAL,CAAlB;AADN,KADJ;AAQX;AACEC,IAAAA,UAAU,EAAE;AATH,GAAP;AAWH,CAtBM;AAyBP,eAAenB,QAAf","sourcesContent":["import Head from \"next/head\"\nimport MeetupList from \"../components/meetups/MeetupList\"\nimport {MongoClient} from \"mongodb\"\nimport {Fragment} from \"react\"\n\nconst HomePage = (props) => {\n    return(\n\t\t<Fragment>\n\t\t\t<Head>\n\t\t\t\t<title>React Meetups</title>\n\t\t\t</Head>\n\t\t\t<MeetupList meetups={props.meetups}/>\n\t\t</Fragment>\n    )\n}\n\n// export const getServerSideProps = async(context) => {\n// \tconst req = context.req;\n// \tconst res = context.res;\n\t\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS\n// \t\t}\n// \t}\n// }\n\n// makes props wait until component functions (useEffect) are executed and data is loaded\nexport const getStaticProps = async() => {\n\t\n\t\tconst client = await MongoClient.connect(\"mongodb+srv://Admin:hesoyam@cluster0.eykfx.mongodb.net/MeetupsProject?retryWrites=true&w=majority\");\n\t\tconst db = client.db();\n\t\t\n\t\tconst meetupCollection = db.collection(\"meetups\");\n\t\n\t\tconst meetups = await meetupCollection.find().toArray();\n\t\n\t\tclient.close();\n\t\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n\t\t\t\ttitle: meetup.title,\n\t\t\t\timage: meetup.image,\n\t\t\t\tid: meetup._id.toString()\n\t\t\t}))\n        },\n// \t\tIncremental static generation feature ( re pre-generate every 1 sec after deployement)\n\t\trevalidate: 1\n    }\n}\n\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}